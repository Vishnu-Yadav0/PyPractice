'''
14. Longest Common Prefix

link: https://leetcode.com/problems/longest-common-prefix/

Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.

'''


class Solution:
    def longestCommonPrefix(self, strs) -> str:
        #if strs is an empty list return ""
        if not strs:
            return ""
        prefix = min(strs, key=len)
        for s in strs:
            #if any element(str) in the list(strs) fails the condition to starts with the prefix
            #then decrease the prefix length by 1 (by removing the ending letter) 
            while not s.startswith(prefix):
                prefix = prefix[:-1]
                #if the prefix variable holds the empty string 
                #that happens when every element is removed one by one return ""
                if not prefix:
                    return ""
        return prefix   
    
sol=Solution()
t1=sol.longestCommonPrefix(["flower","flow","flight"])
t2=sol.longestCommonPrefix(["dog","racecar","car"])

print(t1,t2,sep="\t")